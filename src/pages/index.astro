---
---

<script>
import '../styles/main.css'
import { format } from 'date-fns'
import DOM from '../scripts/modules/dom'
import Cards from '../scripts/modules/cards'
import Projects from '../scripts/modules/projects'
import Storage from '../scripts/modules/storage'

let indexOfCardPicked
const newProjectModal = DOM.getElement('.newproject__modal')
const newTodoModal = DOM.getElement('.newtodo__modal')
const projectsModal = DOM.getElement('.projects__modal')
const editTodoModal = DOM.getElement('.edittodo__modal')
const overlay = DOM.getElement('.overlay')
const newTodoForm = DOM.getElement('.newtodo__form')
const editForm = DOM.getElement('.edittodo__form')
const newProjectForm = DOM.getElement('.newproject__form')
const inputDate = DOM.getElement('#date')
const inputDateEdit = DOM.getElement('#editDate')
const dateToday = format(new Date(), 'yyyy-MM-dd')

function defaultDatePicker () {
  inputDate.value = dateToday
  inputDate.setAttribute('min', dateToday)
  inputDateEdit.value = dateToday
  inputDateEdit.setAttribute('min', dateToday)
}

function closeEverything () {
  DOM.displayNone(overlay)
  DOM.displayNone(newProjectModal)
  DOM.displayNone(newTodoModal)
  DOM.displayNone(projectsModal)
  DOM.displayNone(editTodoModal)
  newProjectForm.reset()
  newTodoForm.reset()
}

DOM.globalEventListener('click', '.overlay', () => {
  closeEverything()
})

window.addEventListener('load', () => {
  if (localStorage.getItem('cards')) {
    Storage.getFromStorage()
    Cards.makeCardsToScreen()
  }
})

DOM.globalEventListener('click', '.sidebar__button__title', e => {
  if (e.target.classList.contains('title--newproject')) {
    DOM.displayBlock(overlay)
    DOM.displayBlock(newProjectModal)
  }
  if (e.target.classList.contains('title--newtodo')) {
    const projectPicker = DOM.getElement('.project__selector')
    projectPicker.replaceChildren()
    Projects.projects_db.forEach(item => {
      DOM.makeElement('option', item, '.project__selector')
    })
    defaultDatePicker()
    DOM.displayBlock(overlay)
    DOM.displayBlock(newTodoModal)
  }
  if (e.target.classList.contains('title--projects')) {
    projectsModal.replaceChildren()
    Projects.projects_db.forEach(item => {
      DOM.makeElement('button', item, '.projects__modal', 'modal__input')
    })
    DOM.displayBlock(overlay)
    DOM.displayFlex(projectsModal)
  }
})

DOM.globalEventListener('click', '.newtodo--decline', e => {
  e.preventDefault()
  newTodoForm.reset()
  closeEverything()
})

DOM.globalEventListener('click', '.newproject--decline', e => {
  e.preventDefault()
  newProjectForm.reset()
  closeEverything()
})

DOM.globalEventListener('click', '.newproject--accept', e => {
  e.preventDefault()
  const newProjectInput = DOM.getElement('.newproject__name').value
  Projects.appendToProjects(newProjectInput)
  newProjectForm.reset()
  closeEverything()
})

DOM.globalEventListener('click', '.newtodo--accept', e => {
  e.preventDefault()
  const inputTitle = DOM.getElement('#nt__title__input').value
  const inputDesc = DOM.getElement('#nt__description').value
  const priority = DOM.getElement('#priority').value
  const project = DOM.getElement('#project').value
  const date = inputDate.value
  const formatedDate = format(new Date(date), 'dd/MM/yyyy')
  const newCard = new Cards(inputTitle, inputDesc, formatedDate, project, priority)
  Cards.appendChecker(newCard)
  newTodoForm.reset()
  closeEverything()
})

DOM.globalEventListener('click', '.fa-trash-alt', e => {
  Cards.removeOneCard(e.target.parentNode.parentNode.parentNode)
})

DOM.globalEventListener('click', '.fa-edit', e => {
  indexOfCardPicked = e.target.parentNode.parentNode.parentNode.dataset.index
  const projectPicker = DOM.getElement('.project__selector__edit')
  projectPicker.replaceChildren()
  Projects.projects_db.forEach(item => {
    DOM.makeElement('option', item, '.project__selector__edit')
  })
  defaultDatePicker()
  DOM.displayBlock(overlay)
  DOM.displayBlock(editTodoModal)
})

DOM.globalEventListener('click', '.edittodo--accept', e => {
  e.preventDefault()
  const inputTitle = DOM.getElement('#et__title__input').value
  const inputDesc = DOM.getElement('#et__description').value
  const priority = DOM.getElement('#editPriority').value
  const project = DOM.getElement('#editProject').value
  const date = inputDateEdit.value
  const formatedDate = format(new Date(date), 'dd/MM/yyyy')
  Cards.editCard(indexOfCardPicked, inputTitle, inputDesc, formatedDate, project, priority)
  editForm.reset()
  closeEverything()
  Cards.makeCardsToScreen()
})

DOM.globalEventListener('click', '.button__ellipse', e => {
  const index = e.target.parentNode.parentNode.dataset.index
  e.target.parentNode.parentNode.classList.add('checkmark--checked')
  e.target.parentNode.nextElementSibling.style.display = 'none'
  Cards.cardsArray.splice(index, 1)
  console.log(Cards.cardsArray)
  Storage.setToStorage()
})

</script>

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://kit.fontawesome.com/42e26b8656.js" crossorigin="anonymous"></script>
    <title>Todo</title>
  </head>
  <body>
    <main class="main">
      <aside class="sidebar">
        <div class="sidebar__container">
          <h1 class="sidebar__title">TODO</h1>
          <div class="sidebar__button__container">
            <div class="sidebar__button button--newproject">
              <button class="sidebar__button__title title--newproject">New Project</button>
            </div>
            <div class="sidebar__button button--newtodo">
              <button class="sidebar__button__title title--newtodo">New Todo</button>
            </div>
            <div class="sidebar__button button--projects">
              <button class="sidebar__button__title title--projects">Projects</button>
            </div>
          </div>
        </div>
        <div class="footer__container">
          <a href="https://github.com/dkkmartin" target="_blank" class="link__github">
            <i class="icon fab fa-github"></i>
          </a>
        </div>
      </aside>
      <section class="main__content__cards">
        <!-- projects modal -->
        <div class="sidebar__modal projects__modal hidden"></div>
        <!-- newtodo modal -->
        <div class="sidebar__modal newtodo__modal hidden">
          <form class="newtodo__form" action="">
            <label for="title" class="nt__title">Title</label>
            <input id="nt__title__input" class="modal__input" type="text" />
            <label for="nt__description" class="nt__description">Description</label>
            <input id="nt__description" class="modal__input input__description" type="text" />
            <label for="priority" class="nt__priority">Priority</label>
            <select class="form__selector" id="priority">
              <option value="Low">Low</option>
              <option value="Medium">Medium</option>
              <option value="High">High</option>
            </select>
            <div class="dateProject__container">
              <div class="date">
                <label for="date">Date</label>
                <input class="form__selector date__input" id="date" type="date" />
              </div>
              <div class="project__container">
                <label for="project" class="project__title">Project</label>
                <select class="form__selector project__selector" id="project"></select>
              </div>
            </div>
            <div class="checkmarks__container">
              <button type="submit" class="p__checkmark checkmark newtodo--accept">
                <i class="fas fa-check newtodo--accept"></i>
              </button>
              <button class="p__checkmark checkmark newtodo--decline">
                <i class="fas fa-times newtodo--decline"></i>
              </button>
            </div>
          </form>
        </div>
        <!-- newproject modal -->
        <div class="sidebar__modal newproject__modal hidden">
          <form class="newproject__form" action="">
            <label for="name" class="np__title">Project name</label>
            <input id="name" class="modal__input newproject__name" type="text" />
            <div class="checkmarks__container">
              <button class="p__checkmark checkmark newproject--accept">
                <i class="fas fa-check newproject--accept"></i>
              </button>
              <button class="p__checkmark checkmark newproject--decline">
                <i class="fas fa-times newproject--decline"></i>
              </button>
            </div>
          </form>
        </div>
        <!-- edit todo modal -->
        <div class="sidebar__modal edittodo__modal hidden">
          <form class="edittodo__form" action="">
            <h1 class="edittodo__modal__title">Edit</h1>
            <label for="title" class="et__title">title</label>
            <input id="et__title__input" class="modal__input" type="text" />
            <label for="et__description" class="et__description">Description</label>
            <input id="et__description" class="modal__input input__description" type="text" />
            <label for="priority" class="nt__priority">Priority</label>
            <select class="form__selector" id="editPriority">
              <option value="Low">Low</option>
              <option value="Medium">Medium</option>
              <option value="High">High</option>
            </select>
            <div class="dateProject__container">
              <div class="date">
                <label for="date">Date</label>
                <input class="form__selector date__input" id="editDate" type="date" />
              </div>
              <div class="project__container">
                <label for="project" class="project__title">Project</label>
                <select class="form__selector project__selector__edit" id="editProject"></select>
              </div>
            </div>
            <div class="checkmarks__container">
              <button type="submit" class="p__checkmark checkmark newtodo--accept">
                <i class="fas fa-check edittodo--accept"></i>
              </button>
              <button class="p__checkmark checkmark newtodo--decline">
                <i class="fas fa-times newtodo--decline"></i>
              </button>
            </div>
          </form>
        </div>
      </section>

      <div class="overlay hidden"></div>
    </main>
  </body>
</html>

